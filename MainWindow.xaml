<Window x:Class="Scripter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Scripter" xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit" xmlns:controls="clr-namespace:Examath.Core.Controls;assembly=Examath.Core" xmlns:converters="clr-namespace:Examath.Core.Converters;assembly=Examath.Core"
        mc:Ignorable="d"
        Title="Examath Scripter" Icon="/Resources/Scripter.ico" d:IsEnabled="True" IsEnabled="False" Height="600" Width="1200" 
        Loaded="Window_Loaded"
        Style="{StaticResource ContrastWindowStyle}" WindowState="Maximized">
    <Window.DataContext>
        <local:Executor></local:Executor>
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="B" Modifiers="Alt" Command="{Binding BuildCommand}"/>
        <KeyBinding Key="E" Modifiers="Alt" Command="{Binding PluginHost.ExecuteCommand}"/>
    </Window.InputBindings>
    <Grid Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="8"/>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel LastChildFill="False" Grid.ColumnSpan="3">
            <Button Command="{Binding OpenCommand}">Open</Button>
            <Button Command="{Binding SaveCommand}">Save</Button>
            <Button Command="{Binding SaveAsCommand}">Save As</Button>
            <Button Command="{Binding FormatDocumentCommand}">Format</Button>
            <Button Command="{Binding PluginHost.ExecuteCommand}" DockPanel.Dock="Right"
                    MinWidth="80"
                    ToolTip="Execute Plugin (Alt+E)"
                    Content="{Binding PluginHost.Name, FallbackValue='Null'}">
                <Button.Foreground>
                    <SolidColorBrush Color="{Binding PluginHost.Colour, FallbackValue=Green}"/>
                </Button.Foreground>
            </Button>
            <!--<Button DockPanel.Dock="Right" ToolTip="Build and run in external program">
                <TextBlock>
                    <Run Foreground="{StaticResource NewColourKey}" Style="{StaticResource Glyph}">&#xE768;</Run>
                    <Run Text="Line"/>
                </TextBlock>
            </Button>
            <Button Style="{StaticResource IconButtonStyle}" DockPanel.Dock="Right" Content="&#xF5B0;" Foreground="{StaticResource NewColourKey}" ToolTip="Build and Execute in Scripter" />-->
            <Button Command="{Binding BuildCommand}" DockPanel.Dock="Right" ToolTip="Build (Alt+C)"
                    >Build</Button>
            <Button Command="{Binding Env.ClearCommand}" DockPanel.Dock="Right" Foreground="{StaticResource OldColourKey}">Clear Console</Button>
        </DockPanel>
        <!--<TextBox Grid.Row="2" AcceptsReturn="True" AcceptsTab="True" Text="{Binding Code, UpdateSourceTrigger=PropertyChanged}"></TextBox>-->
        <avalonedit:TextEditor x:Name="CodeEditor" Grid.Row="1" Grid.RowSpan="4" Margin="2" 
                               SyntaxHighlighting="C#" FontFamily="Consolas" Document="{Binding Code}" ShowLineNumbers="True"
                               LostFocus="CodeEditor_LostFocus">
            <!--<avalonedit:TextEditor.Options>
                <avalonedit:TextEditorOptions 
            </avalonedit:TextEditor.Options>-->
        </avalonedit:TextEditor>
        <GridSplitter Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" Grid.RowSpan="4"/>
        <ListView x:Name="DiagnosticsListBox" Grid.Row="2" Grid.Column="2" 
                  ItemsSource="{Binding Diagnostics}" d:ItemsSource="{d:SampleData ItemCount=5}"
                  SelectionMode="Single" SelectionChanged="DiagnosticsListBox_SelectionChanged">
            <ListView.View>
                <GridView xmlns:dg="clr-namespace:Microsoft.CodeAnalysis;assembly=Microsoft.CodeAnalysis">
                    <GridViewColumn Header="ID" Width="60">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type dg:Diagnostic}">
                                <TextBlock x:Name="text" Text="{Binding Id}" />
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Severity}" Value="Error">
                                        <Setter TargetName="text" Property="Background" Value="{DynamicResource ErrorColourKey}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Severity}" Value="Warning">
                                        <Setter TargetName="text" Property="Foreground" Value="{DynamicResource WarningColourKey}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Severity}" Value="Info">
                                        <Setter TargetName="text" Property="Foreground" Value="Lightblue"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Severity}" Value="Hidden">
                                        <Setter TargetName="text" Property="Foreground" Value="Gray"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Location" DisplayMemberBinding="{Binding Converter={StaticResource StringSplitConverter}, ConverterParameter={StaticResource LocSpl}}"/>
                    <GridViewColumn Header="Descriptor" Width="350">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type dg:Diagnostic}">
                                <TextBlock x:Name="text" Text="{Binding Converter={StaticResource StringSplitConverter}, ConverterParameter={StaticResource LocSpl2}}" TextWrapping="Wrap" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <GridSplitter Grid.Column="2" Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        <ListBox Style="{StaticResource ControlPanelListBoxStyle}" Grid.Row="1" Grid.Column="2">
            <StackPanel Orientation="Horizontal">
                <ToggleButton Content="Auto Parse" IsChecked="{Binding AutoParse}"/>
                <ToggleButton Content="Auto Load" IsChecked="{Binding Metadata.ShouldLoadAutomatically}"/>
                <Button Content="Reset Metadata" Foreground="{StaticResource OldColourKey}" Command="{Binding ResetMetadataCommand}"/>
            </StackPanel>
            <ComboBox Tag="Output Kind" SelectedValue="{Binding Metadata.OutputKind}" SelectedValuePath="Value" ItemsSource="{converters:EnumToItemsSource {x:Type local:ScripterOutputKind}}" />
            <TextBox Tag="Argument" Text="{Binding Metadata.Argument}" ToolTip="Access using ((SModel)e.Model).Argument"/>
            <Expander Header="Imports">
                <DockPanel LastChildFill="False">
                    <ListBox x:Name="ImportsListBox" DockPanel.Dock="Top" Margin="2" Style="{StaticResource ContrastListBoxStyle}" 
                             ItemsSource="{Binding Metadata.Imports}" d:ItemsSource="{d:SampleData ItemCount=5}"></ListBox>
                    <Button Content="+ From File" Command="{Binding ImportFromFileCommand}"/>
                    <Button Content="-" Foreground="{StaticResource OldColourKey}" Command="{Binding RemoveImportCommand}"
                            CommandParameter="{Binding ElementName=ImportsListBox, Path=SelectedItem}"/>
                </DockPanel>
            </Expander>
            <!--<TextBox Tag="Settings Persist Test String" Text="{Binding Source={StaticResource Settings}, Path=Default.Name}"/>-->
        </ListBox>
        <FlowDocumentScrollViewer
                x:Name="OutputContainer"
                Foreground="{StaticResource ForegroundColourKey}"
                Grid.Row="4"
                Margin="2"
                VerticalScrollBarVisibility="Auto" Grid.Column="2"
                DataContext="{Binding Env}"
                Document="{Binding Output}" Grid.RowSpan="2"
                />
        <DockPanel Grid.Row="5" Grid.RowSpan="1" LastChildFill="False">
            <Label Style="{StaticResource OutputLabel}" x:Name="SelectionPositionLabel" Content="[]"/>
            <Label Style="{StaticResource OutputLabel}" Content="{Binding FileLocation}" Grid.Row="1"/>
            <controls:BoolOutput Text="*" IsChecked="{Binding IsModified}"/>
            <controls:BoolOutput Text="P" Background="HotPink" IsChecked="{Binding IsCodeParsed, Converter={StaticResource NotConverter}}"/>
            <Label Style="{StaticResource OutputLabel}" Foreground="{StaticResource NewColourKey}" 
                   Content="{Binding PluginHost.FileName, FallbackValue='null'}"
                   ContentStringFormat="{}PluginHost: {0}"/>
        </DockPanel>
    </Grid>
</Window>
